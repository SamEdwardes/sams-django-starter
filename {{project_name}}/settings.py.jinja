"""
Django settings for {{ project_name }} project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import sys

import logfire
from pydantic_settings import BaseSettings


# -----------------------------------------------------------------------------
# ENVIRONMENT VARIABLES
# -----------------------------------------------------------------------------
class EnvVars(BaseSettings):
    DJANGO_DEBUG: bool = False
    DJANGO_SECRET_KEY: str = ""
    POSTGRES_HOST: str = ""
    POSTGRES_PASSWORD: str = ""
    POSTGRES_USER: str = ""
    POSTGRES_DB: str = ""
    LOGFIRE_TOKEN: str | None = None
    LOGFIRE_SEND_TO_LOGFIRE: bool = False
    LOGFIRE_ENVIRONMENT: str = ""
    LOGFIRE_SERVICE_NAME: str = ""


env_vars = EnvVars()

# -----------------------------------------------------------------------------
# LOGGING
# -----------------------------------------------------------------------------
if "collectstatic" in sys.argv:
    env_vars.LOGFIRE_SEND_TO_LOGFIRE = False

logfire.configure(
    environment=env_vars.LOGFIRE_ENVIRONMENT,
    send_to_logfire=env_vars.LOGFIRE_SEND_TO_LOGFIRE,
    service_name=env_vars.LOGFIRE_SERVICE_NAME,
)

logfire.instrument_django()
logfire.info(
    f"App is starting. {env_vars.DJANGO_DEBUG=}, {env_vars.LOGFIRE_SEND_TO_LOGFIRE=}, {env_vars.POSTGRES_HOST=}"
)

# -----------------------------------------------------------------------------
# GENERAL SETTINGS
# -----------------------------------------------------------------------------
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env_vars.DJANGO_SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env_vars.DJANGO_DEBUG

ROOT_URLCONF = "{{ project_name }}.urls"
WSGI_APPLICATION = "{{ project_name }}.wsgi.application"

ALLOWED_HOSTS = ["localhost"]


# -----------------------------------------------------------------------------
# APPS
# -----------------------------------------------------------------------------
# Application definition
INSTALLED_APPS = [
    # Built-in
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third party
    "django_cotton.apps.SimpleAppConfig",
    "template_partials.apps.SimpleAppConfig",
    "django_tasks",
    "django_tasks.backends.database",
    # My apps
    "{{ app_name }}.apps.WaitlistConfig",
]

# -----------------------------------------------------------------------------
# MIDDLEWARE
# -----------------------------------------------------------------------------
MIDDLEWARE = [
    # Built-in
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    # Third party
]


# -----------------------------------------------------------------------------
# TEMPLATES
# -----------------------------------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": False,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "loaders": [
                (
                    "template_partials.loader.Loader",
                    [
                        (
                            "django.template.loaders.cached.Loader",
                            [
                                "django_cotton.cotton_loader.Loader",
                                "django.template.loaders.filesystem.Loader",
                                "django.template.loaders.app_directories.Loader",
                            ],
                        )
                    ],
                )
            ],
            "builtins": [
                "django_cotton.templatetags.cotton",
                "template_partials.templatetags.partials",
            ],
        },
    },
]

# -----------------------------------------------------------------------------
# DATABASE
# -----------------------------------------------------------------------------
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "NAME": env_vars.POSTGRES_DB,
        "USER": env_vars.POSTGRES_USER,
        "PASSWORD": env_vars.POSTGRES_PASSWORD,
        "HOST": env_vars.POSTGRES_HOST,
        "PORT": "5432",
    }
}

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# -----------------------------------------------------------------------------
# TASKS
# -----------------------------------------------------------------------------
TASKS = {"default": {"BACKEND": "django_tasks.backends.database.DatabaseBackend"}}

# -----------------------------------------------------------------------------
# AUTH
# -----------------------------------------------------------------------------
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# -----------------------------------------------------------------------------
# INTERNATIONALIZATION
# -----------------------------------------------------------------------------
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# -----------------------------------------------------------------------------
# STATIC
# -----------------------------------------------------------------------------
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = "static/"
STATIC_ROOT = str(BASE_DIR / "staticfiles")
